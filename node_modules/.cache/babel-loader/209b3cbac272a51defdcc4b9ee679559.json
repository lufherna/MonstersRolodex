{"ast":null,"code":"var _jsxFileName = \"/Volumes/External/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'; // why would we want to use a Class vs a function?\n// by using a class component we have access\n// to state\n// jsx mimics what html does and it helps us build\n// components with different states\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  } // when react puts our component on our page it'll \n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  } // render method comes built in with the react component\n\n\n  render() {\n    // need to get the filtered monster names\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"search monsters\",\n      onChange: e => this.setState({\n        searchField: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/External/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredMonsters","filter","monster","name","toLowerCase","includes","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,4CAAzB,C,CAEA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID,GAPyB,CAS5B;;;AACEC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO;AAAZ,KAAd,CAFjB;AAGD,GAdyB,CAgB5B;;;AACEE,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAET,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA4B,KAAKF,KAAvC;AACA,UAAMW,gBAAgB,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAC9CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACa,WAAZ,EAApC,CADuB,CAAzB;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAEE,CAAC,IACT,KAAKR,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAxB,OAAd,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAER,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AApCyB;;AAuC5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\n\n// why would we want to use a Class vs a function?\n// by using a class component we have access\n// to state\n// jsx mimics what html does and it helps us build\n// components with different states\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n// when react puts our component on our page it'll \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users}))\n  }\n\n// render method comes built in with the react component\n  render() {\n    // need to get the filtered monster names\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <input \n          type='search' \n          placeholder='search monsters' \n          onChange={e => \n            this.setState({ searchField: e.target.value }\n            )\n          }\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}