{"ast":null,"code":"import _classCallCheck from\"/Volumes/External/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/External/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/External/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/External/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';import{CardList}from'./components/card-list/card-list.component';import{SearchBox}from'./components/search-box/search-box.component';// why would we want to use a Class vs a function?\n// by using a class component we have access\n// to state\n// jsx mimics what html does and it helps us build\n// components with different states\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.state={monsters:[],searchField:''};return _this;}// when react puts our component on our page it'll \n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({monsters:users});});}// render method comes built in with the react component\n},{key:\"render\",value:function render(){var _this3=this;// need to get the filtered monster names\nvar _this$state=this.state,monsters=_this$state.monsters,searchField=_this$state.searchField;var filteredMonsters=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Monsters Rolodex\"),/*#__PURE__*/React.createElement(SearchBox,{placeholder:\"search monsters\",handleChange:function handleChange(e){return _this3.setState({searchField:e.target.value});}}),/*#__PURE__*/React.createElement(CardList,{monsters:filteredMonsters}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Volumes/External/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","state","monsters","searchField","fetch","then","response","json","users","setState","filteredMonsters","filter","monster","name","toLowerCase","includes","e","target","value"],"mappings":"olBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,OAASC,QAAT,KAAyB,4CAAzB,CACA,OAASC,SAAT,KAA0B,8CAA1B,CAEA;AACA;AACA;AACA;AACA;GAEMC,CAAAA,G,0FACJ,cAAc,qCACZ,wBACA,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CAEXC,WAAW,CAAE,EAFF,CAAb,CAFY,aAOb,CAEH;6EACsB,iBAClBC,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEP,QAAQ,CAAEM,KAAZ,CAAd,CAAJ,EAFb,EAGD,CAEH;uCACW,iBACP;AADO,gBAE2B,KAAKP,KAFhC,CAECC,QAFD,aAECA,QAFD,CAEWC,WAFX,aAEWA,WAFX,CAGP,GAAMO,CAAAA,gBAAgB,CAAGR,QAAQ,CAACS,MAAT,CAAgB,SAAAC,OAAO,QAC9CA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCZ,WAAW,CAACW,WAAZ,EAApC,CAD8C,EAAvB,CAAzB,CAGA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,iDADF,cAEE,oBAAC,SAAD,EACE,WAAW,CAAC,iBADd,CAEE,YAAY,CAAE,sBAAAE,CAAC,QAAI,CAAA,MAAI,CAACP,QAAL,CAAc,CAAEN,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAvB,CAAd,CAAJ,EAFjB,EAFF,cAME,oBAAC,QAAD,EAAU,QAAQ,CAAER,gBAApB,EANF,CADF,CAUD,C,iBAlCeb,S,EAqClB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\n// why would we want to use a Class vs a function?\n// by using a class component we have access\n// to state\n// jsx mimics what html does and it helps us build\n// components with different states\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n  }\n\n// when react puts our component on our page it'll \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users}))\n  }\n\n// render method comes built in with the react component\n  render() {\n    // need to get the filtered monster names\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={e => this.setState({ searchField:e.target.value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}